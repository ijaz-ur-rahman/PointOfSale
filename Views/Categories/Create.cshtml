@model DatabaseService.Categories

@{
    ViewBag.Heading = "Create Category";
    Layout = null;
    // We use same page for add and edit.
    string urlPostString = "/Categories/Create";
    if (ViewBag.Status == "Update")
    {
        urlPostString = "/Categories/Update";
    }
}

<h2>@ViewBag.Status Student</h2>

<form id="frmStudent" name="frmStudent" method="post" action="#@urlPostString">
    @Html.HiddenFor(x => x.Id)
    <div class="row">
        <div class="form-group">
            <label for="Variables">First Name</label>
            @Html.TextBoxFor(x => x.Label, new { @class = "form-control square" })
        </div>
        <div class="form-group">
            <label for="Variables">Last Name</label>
            @Html.TextBoxFor(x => x.Code, new { @class = "form-control square" })
        </div>
        <div class="form-group">
            <label for="Variables">Email</label>
            @Html.TextBoxFor(x => x.Description, new { @class = "form-control square" })
        </div>
        <div class="form-group">
            <label for="Variables">Class</label>
            @Html.TextBoxFor(x => x.ParentCategoryId, new { @class = "form-control square" })
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>
    </div>
</form>



<div>
    <a href="#/Categories/Index">Back to List</a>
</div>

<script>
    alert("kdsjf");
    $(function () {
        $("#frmStudent").validate({
        rules: {
            label: "required",
            code: "required"
           
        },
        messages: {
            label: "Please enter your firstname",
            code: "Please enter your lastname"
           
        },
        errorElement: "em",
        errorPlacement: function (error, element) {
            // Add the `help-block` class to the error element
            error.addClass("help-block");

            if (element.prop("type") === "checkbox") {
                error.insertAfter(element.parent("label"));
            } else {
                error.insertAfter(element);
            }
        },
        highlight: function (element, errorClass, validClass) {
            $(element).parents(".col-sm-5").addClass("has-error").removeClass("has-success");
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).parents(".col-sm-5").addClass("has-success").removeClass("has-error");
        }
    });
    });
    $("#frmStudent").on("submit", function (e) {
        if ($("#frmStudent").valid()) {
        routingApp.runRoute('post', '#@urlPostString');
        e.preventDefault();
        e.stopPropagation();
        }
    });

    // add dynamic create or update link

    debugger;
    if (IfLinkNotExist("POST", "#@urlPostString")) {
        routingApp.post("#@urlPostString", function (context) {
            //let loader = document.getElementById('loader');
            //loader.classList.remove('fadeOut');
            //setTimeout(() => {
            //    loader.classList.add('fadeIn');
            //}, 300);
            $("#loader").removeClass("fadeOut").addClass("fadeIn");

            var formData = new FormData($('#frmStudent')[0]);
            $.ajax({
                url: '@urlPostString',
                data: formData,
                type: "POST",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#loader").removeClass("fadeIn").addClass("fadeOut");
                    if (response.success) {
                        if ('@ViewBag.Status' == 'Add')
                            alert("Student successfully added");
                        else if ('@ViewBag.Status' == 'Edit')
                            alert("Student successfully updated");
                        window.location.href = "#/Student/Index";
                    }
                    else {
                        alert(response.message);
                        window.location.href = "#/Student/Create";
                    }
                },
                error: function (ex) {
                    $("#loader").removeClass("fadeIn").addClass("fadeOut");
                    alert(ex.message);
                    //ClearAll();
                    //window.location.reload();
                }
            });
        });
    }

</script>